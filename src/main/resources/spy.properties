#################################################################
# P6Spy SQL Logging Configuration
# DataSource Proxy를 통한 실제 실행 SQL 로깅
#################################################################

# 사용할 모듈 (appender만 사용)
modulelist=com.p6spy.engine.spy.P6SpyFactory,com.p6spy.engine.logging.P6LogFactory,com.p6spy.engine.outage.P6OutageFactory

# Custom Log Message Format
# %(currentTime) - 현재 시간
# %(executionTime) - 실행 시간 (ms)
# %(category) - 카테고리 (Statement, ResultSet 등)
# %(sql) - 실행된 SQL (파라미터 바인딩 포함)
logMessageFormat=com.p6spy.engine.spy.appender.CustomLineFormat
customLogMessageFormat=\n📌 [%(executionTime)ms] %(category)\n%(sql)\n

# SQL 로깅 출력 방식 (SLF4J 사용)
appender=com.p6spy.engine.spy.appender.Slf4JLogger

# 로그 레벨 (slf4j에서 제어하므로 여기서는 info)
logLevel=info

# 필터링할 카테고리 (빈 값 = 모두 로깅)
# 예: include = statement, resultset, commit, rollback
# 예: exclude = resultset
excludecategories=info,debug,result,resultset,batch

# 실행 시간이 느린 쿼리만 로깅 (밀리초, 0 = 모든 쿼리)
# 예: 1000 = 1초 이상 걸린 쿼리만 로깅
outagedetection=true
outagedetectioninterval=1000

# SQL 포맷팅 (개행 및 들여쓰기)
# 이미 application.yml에서 multiline=true 설정함
databaseDialectDateFormat=yyyy-MM-dd HH:mm:ss

# 실제 바인딩된 파라미터 값 표시
excludebinary=false

# 테이블 prefix 제거 (보기 쉽게)
# 예: SELECT * FROM mydb.users → SELECT * FROM users
# reloadproperties=false
# reloadpropertiesinterval=60

# 빈 결과셋 제외 (선택사항)
# exclude empty results
# excludeemptyresults=false

# Date Format
dateformat=yyyy-MM-dd HH:mm:ss.SSS

